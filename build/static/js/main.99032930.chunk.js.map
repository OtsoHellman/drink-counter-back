{"version":3,"sources":["Containers/Home.js","utils/helpers.js","Containers/User.js","Components/UserCard.js","Containers/List.js","Containers/AddUser.js","Components/Menu.js","App.js","serviceWorker.js","index.js"],"names":["socket","Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","socketIOClient","on","res","setState","data","close","react_default","a","createElement","className","es","xType","stackBy","width","height","color","Component","sendUserData","axios","post","concat","username","mass","gender","then","response","console","log","catch","error","addDrinkByUsername","drinkSize","getAllUserData","get","getUserData","User","props","location","pathname","substring","userdata","addDrink","handleDrinkSizeChange","e","Number","target","value","submitCustomSizeDrink","classes","Grid_default","item","xs","Paper_default","konni","Button_default","variant","button","onClick","TextField_default","id","label","textField","onChange","margin","submitButton","withStyles","theme","spacing","unit","input","display","marginLeft","marginRight","marginTop","card","minWidth","bullet","transform","title","fontSize","pos","marginBottom","Card_default","CardContent_default","component","NavLink","to","user","Typography_default","List","users","map","UserCard","key","Fab_default","aria-label","fab","Add_default","position","bottom","right","withTheme","variantIcon","success","CheckCircleIcon","ErrorIcon","MySnackbarContentWrapper","backgroundColor","green","palette","dark","warning","amber","icon","iconVariant","opacity","message","alignItems","onClose","other","objectWithoutProperties","Icon","SnackbarContent_default","assign","classNames","aria-describedby","action","IconButton_default","Close_default","genders","addUser","submitForm","userData","asd","status","successfulSnackBarOpen","errorSnackBarOpen","handleChange","name","event","defineProperty","handleSuccessfulClose","reason","handleErrorClose","container","noValidate","autoComplete","fullWidth","type","select","SelectProps","MenuProps","menu","option","MenuItem_default","Send_default","rightIcon","iconSmall","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","flexWrap","dense","FullWidthTabs","handleChangeIndex","index","window","AppBar_default","Tabs_default","root","indicatorColor","textColor","Tab_default","React","App","BrowserRouter","Menu","Route","exact","path","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99032930.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'react-vis/dist/style.css';\nimport {\n    XYPlot,\n    VerticalBarSeries,\n    VerticalGridLines,\n    HorizontalGridLines,\n    XAxis,\n    YAxis\n} from 'react-vis';\nimport '../App.css';\nimport socketIOClient from \"socket.io-client\";\n\nconst URL = ''\nlet socket;\n\nclass Home extends Component {\n\n    constructor() {\n        super()\n        this.state = {}\n    }\n\n    componentDidMount() {\n        socket = socketIOClient(URL);\n        socket.on(\"allWithKonni\", res => {\n            this.setState({ data: res.data })\n        });\n    }\n\n    componentWillUnmount() {\n        socket.close()\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"chart-container\">\n                    <XYPlot\n                        xType=\"ordinal\"\n                        stackBy=\"y\"\n                        width={300}\n                        height={300}\n                    >\n                        <VerticalGridLines />\n                        <HorizontalGridLines />\n                        <XAxis />\n                        <YAxis />\n                        <VerticalBarSeries\n                            color=\"#12939A\"\n                            data={this.state.data}\n                        />\n                    </XYPlot>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import axios from 'axios';\n\nconst URL = ''\n\nexport const sendUserData = (data) => {\n    return axios.post(`${URL}/api/user`, {\n        username: data.username,\n        mass: data.mass,\n        gender: data.gender\n    })\n        .then(function (response) {\n            console.log(response);\n            return response\n        })\n        .catch(function (error) {\n            console.log(error);\n            return error\n        });\n}\n\nexport const addDrinkByUsername = (username, drinkSize) => {\n    return axios.post(`${URL}/api/drink`, {\n        username,\n        drinkSize\n    })\n        .then(function (response) {\n            console.log(response);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\n\nexport const getAllUserData = () => {\n    return (axios.get(`${URL}/api/user`))\n}\n\nexport const getAllWithKonni = () => {\n    return axios.get(`${URL}/api/user/allWithKonni`)\n}\n\nexport const getUserData = (username) => {\n    return axios.get(`${URL}/api/user/getUser/${username}`)\n}","import React, { Component } from 'react';\nimport '../App.css';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nimport { getUserData, addDrinkByUsername } from '../utils/helpers';\n\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    input: {\n        display: 'none',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n\n    submitButton: {\n        marginTop: 16,\n        margin: theme.spacing.unit,\n    }\n});\n\nclass User extends Component {\n\n    constructor(props) {\n        super()\n        this.state = {\n            userdata: []\n        }\n    }\n\n    componentDidMount() {\n        this.getUserData()\n    }\n\n    getUserData = () => {\n        getUserData(this.props.location.pathname.substring(6))\n            .then((res) => {\n                this.setState({\n                    userdata: res.data\n                })\n            })\n    }\n\n    addDrink = (drinkSize) => {\n        addDrinkByUsername(this.props.location.pathname.substring(6), drinkSize)\n            .then(() => {\n                this.getUserData()\n            })\n    }\n\n    handleDrinkSizeChange = (e) => {\n        this.setState({\n            drinkSize: Number(e.target.value)\n        })\n    }\n\n    submitCustomSizeDrink = () => {\n        this.addDrink(this.state.drinkSize)\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n\n            <Grid item xs={12}>\n                <Paper className={'userTitle'}><h2>{this.state.userdata.username}</h2></Paper>\n                <p>Gender: {this.state.userdata.gender}</p>\n                <p>Könni: {this.state.userdata.konni}</p>\n                <Button variant=\"contained\" className={classes.button} color=\"primary\" onClick={() => this.addDrink(1.0)}>\n                    0.33l\n                </Button>\n                <Button variant=\"contained\" className={classes.button} color=\"primary\" onClick={() => this.addDrink(1.0)}>\n                    0.55l\n                </Button>\n                <Grid item xs={12}>\n                    <TextField\n                        id=\"drinkSize\"\n                        label=\"Custom drink size\"\n                        className={classes.textField}\n                        onChange={this.handleDrinkSizeChange}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                    />\n                    <Button variant=\"contained\" className={classes.submitButton} onClick={this.submitCustomSizeDrink}>\n                        Submit\n                    </Button>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(styles)(User);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { NavLink } from \"react-router-dom\";\n\nconst styles = {\n  card: {\n    minWidth: 275,\n    margin: 10\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n};\n\nconst SimpleCard = (props) => {\n  const { classes } = props;\n  return (\n    <Card className={classes.card}>\n      <CardContent component={NavLink} to={\"user/\" + props.user.username}>\n        <Typography variant=\"h5\" component=\"h2\">\n            {props.user.username}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nSimpleCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleCard);\n","import React, { Component } from 'react';\nimport '../App.css';\nimport { getAllUserData } from '../utils/helpers';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport UserCard from '../Components/UserCard';\nimport { withStyles } from '@material-ui/core/styles';\nimport { NavLink } from \"react-router-dom\";\n\nconst styles = theme => ({\n    fab: {\n      position: 'fixed',\n      bottom: theme.spacing.unit * 2,\n      right: theme.spacing.unit * 2,\n    },\n  });\n\nclass List extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            users: []\n        }\n    }\n\n    componentDidMount() {\n        this.getUserData()\n    }\n\n    getUserData = () => {\n        getAllUserData()\n            .then((res) => {\n                this.setState({\n                    users: res.data\n                })\n            })\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className=\"App\">\n                {this.state.users.map(user => (\n                    <UserCard key={user.username} user={user} />\n                ))}\n                <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab} component={NavLink} to=\"/addUser\" >\n                    <AddIcon />\n                </Fab>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles, { withTheme: true })(List);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\nimport { sendUserData } from \"../utils/helpers\";\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport SendIcon from '@material-ui/icons/Send';\nimport classNames from 'classnames';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    dense: {\n        marginTop: 16,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    iconSmall: {\n        fontSize: 20,\n    },\n});\n\nconst styles1 = theme => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing.unit,\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n});\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    error: ErrorIcon,\n};\n\nfunction MySnackbarContent(props) {\n    const { classes, className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={classNames(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n                    <Icon className={classNames(classes.icon, classes.iconVariant)} />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nMySnackbarContent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nconst genders = [\n    {\n\n        label: 'Other',\n        value: 'other',\n    },\n    {\n        label: 'Male',\n        value: 'male',\n    },\n    {\n        label: 'Female',\n        value: 'female',\n    },\n];\n\nclass addUser extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            mass: 0,\n            gender: 'other',\n            successfulSnackBarOpen: false,\n            errorSnackBarOpen: false\n        }\n    }\n\n    submitForm = () => {\n        const userData = {\n            username: this.state.username,\n            mass: this.state.mass,\n            gender: this.state.gender,\n        }\n        sendUserData(userData)\n            .then((asd) => {\n                if (asd.status === 200) {\n                    this.setState({\n                        successfulSnackBarOpen: true\n                    })\n                } else {\n                    this.setState({\n                        errorSnackBarOpen: true\n                    })\n                }\n            })\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    handleSuccessfulClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            successfulSnackBarOpen: false\n        })\n    }\n\n    handleErrorClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            errorSnackBarOpen: false\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className=\"App\">\n                <h2>Add user</h2>\n                <div>\n                    <form className={classes.container} noValidate autoComplete=\"off\">\n                        <TextField\n                            fullWidth\n                            id=\"filled-username\"\n                            label=\"Name\"\n                            className={classes.textField}\n                            value={this.state.username}\n                            onChange={this.handleChange('username')}\n                            margin=\"dense\"\n                            variant=\"filled\"\n                        />\n\n                        <TextField\n                            fullWidth\n                            id=\"filled-weight\"\n                            label=\"Weight\"\n                            value={this.state.mass}\n                            onChange={this.handleChange('mass')}\n                            type=\"number\"\n                            className={classes.textField}\n                            margin=\"dense\"\n                            variant=\"filled\"\n                        />\n                        <TextField\n                            fullWidth\n                            id=\"filled-select-gender\"\n                            select\n                            label=\"Gender\"\n                            className={classes.textField}\n                            value={this.state.gender}\n                            onChange={this.handleChange('gender')}\n                            SelectProps={{\n                                MenuProps: {\n                                    className: classes.menu,\n                                },\n                            }}\n                            margin=\"dense\"\n                            variant=\"filled\"\n                        >\n                            {genders.map(option => (\n                                <MenuItem key={option.value} value={option.value}>\n                                    {option.label}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n\n                        <Button fullWidth variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.submitForm}>\n                            Send\n        <SendIcon className={classNames(classes.rightIcon, classes.iconSmall)} />\n                        </Button>\n\n                        <Snackbar\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                            }}\n                            open={this.state.successfulSnackBarOpen}\n                            autoHideDuration={5000}\n                            onClose={this.handleSuccessfulClose}\n                        >\n                            <MySnackbarContentWrapper\n                                onClose={this.handleSuccessfulClose}\n                                variant=\"success\"\n                                className={classes.margin}\n                                message=\"User added successfully!\"\n                            />\n                        </Snackbar>\n\n                        <Snackbar\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                            }}\n                            open={this.state.errorSnackBarOpen}\n                            autoHideDuration={5000}\n                            onClose={this.handleErrorClose}\n                        >\n                            <MySnackbarContentWrapper\n                                onClose={this.handleErrorClose}\n                                variant=\"error\"\n                                className={classes.margin}\n                                message=\"Invalid name or weight!\"\n                            />\n                        </Snackbar>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(addUser);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\n\nimport { NavLink } from \"react-router-dom\";\n\nfunction TabContainer({ children, dir }) {\n    return (\n        <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\n            {children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n    dir: PropTypes.string.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        backgroundColor: \"#ffbb02\"\n    },\n});\n\nclass FullWidthTabs extends React.Component {\n    state = {\n        value: '/',\n    };\n\n    componentWillMount() {\n        this.setState({ value: window.location.pathname });\n    }\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    handleChangeIndex = index => {\n        this.setState({ value: index });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <AppBar position=\"fixed\">\n                <Tabs\n                    className={classes.root}\n                    value={this.state.value}\n                    onChange={this.handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    fullWidth\n                >\n                    <Tab value=\"/\" label=\"Home\" component={NavLink} to=\"/\" />\n                    <Tab value=\"/list\" label=\"Users\" component={NavLink} to=\"/list\" />\n                </Tabs>\n            </AppBar>\n        );\n    }\n}\n\nFullWidthTabs.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(FullWidthTabs);","import React, { Component } from 'react';\nimport {\n    Route,\n    NavLink,\n    BrowserRouter\n} from \"react-router-dom\";\nimport Home from './Containers/Home'\nimport User from './Containers/User'\nimport List from './Containers/List'\nimport addUser from './Containers/AddUser'\nimport Menu from './Components/Menu'\n\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <BrowserRouter>\n                    <div>\n                        <Menu/>\n                        <div className=\"content\">\n                            <Route exact path=\"/\" component={Home} />\n                            <Route path=\"/user\" component={User} />\n                            <Route path=\"/list\" component={List} />\n                            <Route path=\"/addUser\" component={addUser} />\n                        </div>\n                    </div>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}