{"version":3,"sources":["Containers/Home.js","utils/helpers.js","Containers/User.js","Containers/List.js","Containers/AddUser.js","App.js","serviceWorker.js","index.js"],"names":["socket","Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","socketIOClient","on","res","setState","data","close","react_default","a","createElement","className","es","xType","stackBy","width","height","color","Component","sendUserData","axios","post","concat","username","mass","gender","then","response","console","log","catch","error","addDrinkByUsername","drinkSize","getAllUserData","get","getUserData","User","props","location","pathname","substring","userdata","addDrink","handleDrinkSizeChange","e","Number","target","value","submitCustomSizeDrink","konni","onClick","type","name","onChange","List","users","map","user","key","_id","NavLink","to","handleUsernameChange","handleMassChange","toggleMaleStatus","isMale","submitForm","userData","checked","App","BrowserRouter","exact","Route","path","component","addUser","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0dc4ae59.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'react-vis/dist/style.css';\nimport {\n    XYPlot,\n    VerticalBarSeries,\n    VerticalGridLines,\n    HorizontalGridLines,\n    XAxis,\n    YAxis\n} from 'react-vis';\nimport '../App.css';\nimport socketIOClient from \"socket.io-client\";\n\nconst URL = ''\nlet socket;\n\nclass Home extends Component {\n\n    constructor() {\n        super()\n        this.state = {}\n    }\n\n    componentDidMount() {\n        socket = socketIOClient(URL);\n        socket.on(\"allWithKonni\", res => {\n            this.setState({ data: res.data })\n        });\n    }\n\n    componentWillUnmount() {\n        socket.close()\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"chart-container\">\n                    <XYPlot\n                        xType=\"ordinal\"\n                        stackBy=\"y\"\n                        width={300}\n                        height={300}\n                    >\n                        <VerticalGridLines />\n                        <HorizontalGridLines />\n                        <XAxis />\n                        <YAxis />\n                        <VerticalBarSeries\n                            color=\"#12939A\"\n                            data={this.state.data}\n                        />\n                    </XYPlot>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import axios from 'axios';\n\nconst URL = ''\n\nexport const sendUserData = (data) => {\n    axios.post(`${URL}/api/user`, {\n        username: data.username,\n        mass: data.mass,\n        gender: data.gender\n    })\n        .then(function (response) {\n            console.log(response);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\n\nexport const addDrinkByUsername = (username, drinkSize) => {\n    return axios.post(`${URL}/api/drink`, {\n        username,\n        drinkSize\n    })\n        .then(function (response) {\n            console.log(response);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\n\nexport const getAllUserData = () => {\n    return (axios.get(`${URL}/api/user`))\n}\n\nexport const getAllWithKonni = () => {\n    return(axios.get(`${URL}/api/user/allWithKonni`))\n}\n\nexport const getUserData = (username) => {\n    return(axios.get(`${URL}/api/user/getUser/${username}`))\n}","import React, { Component } from 'react';\nimport '../App.css';\n\nimport { getUserData, addDrinkByUsername } from '../utils/helpers';\n\nclass User extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            userdata: []\n        }\n    }\n\n    componentDidMount() {\n        this.getUserData()\n    }\n\n    getUserData = () => {\n        getUserData(this.props.location.pathname.substring(6))\n            .then((res) => {\n                this.setState({\n                    userdata: res.data\n                })\n            })\n    }\n\n    addDrink = (drinkSize) => {\n        addDrinkByUsername(this.props.location.pathname.substring(6), drinkSize)\n            .then(() => {\n                this.getUserData()\n            })\n    }\n\n    handleDrinkSizeChange = (e) => {\n        this.setState({\n            drinkSize: Number(e.target.value)\n        })\n    }\n\n    submitCustomSizeDrink = () => {\n        this.addDrink(this.state.drinkSize)\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <h2>{this.state.userdata.username}</h2>\n                <p>gender: {this.state.userdata.gender}</p>\n                <p>kÃ¶nni: {this.state.userdata.konni}</p>\n                <button onClick={() => this.addDrink(1.0)}>0.33l</button>\n                <button onClick={() => this.addDrink(1.5)}>0.50l</button>\n                <label>\n                    Custom drink size:\n                    <input type=\"number\" name=\"drinkSize\" onChange={this.handleDrinkSizeChange} />\n                </label>\n                <button onClick={this.submitCustomSizeDrink}>Submit</button>\n            </div>\n        );\n    }\n}\n\nexport default User;\n","import React, { Component } from 'react';\nimport '../App.css';\nimport { NavLink } from \"react-router-dom\";\nimport { getAllUserData } from '../utils/helpers';\n\n\n\nclass List extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            users: []\n        }\n    }\n\n    componentDidMount() {\n        this.getUserData()\n    }\n\n    getUserData = () => {\n        getAllUserData()\n            .then((res) => {\n                this.setState({\n                    users: res.data\n                })\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                {this.state.users.map(user => (\n                    <ul key={user._id}>\n                        <li>\n                            <NavLink to={\"user/\" + user.username}>{user.username}</NavLink>\n                        </li>\n                    </ul>\n                ))}\n            </div>\n        );\n    }\n}\n//{this.state.users}\n//{this.state.persons.map(person => <Person key={person.id} person={person} onDelete={this.deletePerson} />)}\nexport default List;","import React, { Component } from 'react';\nimport '../App.css';\nimport { sendUserData } from \"../utils/helpers\";\n\nclass List extends Component {\n    constructor(){\n        super()\n        this.state = {\n            isMale: true,\n        }\n    }\n\n    handleUsernameChange = (e) => {\n        this.setState({\n            username: e.target.value\n        })\n    }\n\n    handleMassChange = (e) => {\n        this.setState({\n            mass: e.target.value\n        })\n    }\n\n\n    toggleMaleStatus = () => {\n        this.setState({\n            isMale: !this.state.isMale\n        })\n    }\n\n    submitForm = () => {\n        const userData = {\n            username: this.state.username,\n            mass: this.state.mass,\n            gender: this.state.isMale ? 'male' : 'female',\n        }\n        sendUserData(userData)\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <h2>Add user</h2>\n                    <label>\n                        Username:\n                        <input type=\"text\" name=\"name\" onChange={this.handleUsernameChange}/>\n                    </label>\n                    <label>\n                        Mass:\n                        <input type=\"nunber\" name=\"name\" onChange={this.handleMassChange}/>\n                    </label>\n                    <label>\n                        Are you male?\n                        <input type=\"checkbox\" checked={this.state.isMale} onChange={this.toggleMaleStatus}/>\n                    </label>\n                <button onClick={this.submitForm}>Submit</button>\n            </div>\n        );\n    }\n}\n\nexport default List;","import React, { Component } from 'react';\nimport {\n    Route,\n    NavLink,\n    BrowserRouter\n} from \"react-router-dom\";\nimport Home from './Containers/Home'\nimport User from './Containers/User'\nimport List from './Containers/List'\nimport addUser from './Containers/AddUser'\n\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <BrowserRouter>\n                    <div>\n                        <ul className=\"header\">\n                            <li className=\"front-page-li\"><NavLink exact to=\"/\">Home</NavLink> </li>\n                            <li className=\"front-page-li\"><NavLink to=\"/list\">List</NavLink></li>\n                            <li className=\"front-page-li\"><NavLink to=\"/addUser\">Add user</NavLink></li>\n                        </ul>\n                        <div className=\"content\">\n                            <Route exact path=\"/\" component={Home} />\n                            <Route path=\"/user\" component={User} />\n                            <Route path=\"/list\" component={List} />\n                            <Route path=\"/addUser\" component={addUser} />\n                        </div>\n                    </div>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}